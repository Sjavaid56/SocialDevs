{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/AddExperience.js","components/routing/PrivateRoute.js","components/profile-form/AddEducation.js","components/profiles/ProfileItems.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/posts.js","reducers/index.js","store.js","components/profile-form/EditProfile.js","App.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","console","log","post","errors","response","forEach","error","useState","Password2","formData","setFormData","password2","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","required","minLength","alerts","alert","length","map","key","Spinner","override","css","sizeUnit","size","color","getCurrentProfile","paylod","statusText","status","createProfile","history","edit","push","DashboardActions","class","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","moment","utc","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","setformData","displaySocialInputs","toggleSocialInputs","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","Component","component","rest","render","props","addEducation","fieldofstudy","ProfileItem","avatar","src","alt","slice","skill","index","getProfiles","profiles","ProfileTop","social","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","reps","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","join","App","exact","path","Landing","Register","Login","Profiles","Profile","Route","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0d1608a.chunk.js","sourcesContent":["import uuid from 'uuid';\nimport {\n  SET_ALERT,\n  REMOVE_ALERT\n} from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: {\n      msg,\n      alertType,\n      id\n    }\n  });\n\n  setTimeout(() => dispatch({\n    type: REMOVE_ALERT,\n    payload: id\n  }), timeout);\n};","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n}\n\nexport default setAuthToken","import axios from 'axios';\nimport {\n  setAlert\n} from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    })\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    })\n  }\n}\n\n//Register User\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    console.log('body', body, config);\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout / clear profile \n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n}","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers </Link>{' '}\n      </li>{' '}\n      <li>\n        <Link to='/posts'>Posts</Link>{' '}\n      </li>{' '}\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user' />\n          <span className='hide-sm'> Dashboard </span>{' '}\n        </Link>{' '}\n      </li>{' '}\n      <li>\n        <a onClick={logout} href='#!'>\n          <i className='fas fa-sign-out-alt' />{' '}\n          <span className='hide-sm'> Logout </span>{' '}\n        </a>{' '}\n      </li>{' '}\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'> Developers </Link>{' '}\n      </li>{' '}\n      <li>\n        <Link to='/register'> Register </Link>{' '}\n      </li>{' '}\n      <li>\n        <Link to='/login'> Login </Link>{' '}\n      </li>{' '}\n    </ul>\n  );\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code' /> DevSpace{' '}\n        </Link>{' '}\n      </h1>{' '}\n      {!loading && (\n        <Fragment> {isAuthenticated ? authLinks : guestLinks} </Fragment>\n      )}{' '}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    logout\n  }\n)(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>DevSpace</h1>\n          <p className='lead'>\n            Create and share your engineering profile/portfolio, share posts,\n            and get help from others.\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    Password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Create Your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, register }\n)(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            minLength='6'\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport { css } from '@emotion/core';\n// First way to import\nimport { GridLoader, ClimbingBoxLoader, SyncLoader } from 'react-spinners';\nexport default function Spinner() {\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: #17a2b8;\n    margin-top: 150px;\n    margin-left: 410px;\n  `;\n\n  return (\n    <Fragment>\n      <i className='sweet-loading'>\n        <SyncLoader\n          css={override}\n          sizeUnit={'2px'}\n          size={5}\n          color={'#17a2b8'}\n        />{' '}\n      </i>{' '}\n    </Fragment>\n  );\n}\n","import axios from 'axios';\nimport {\n  setAlert\n} from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE,\n  GET_REPOS,\n} from './types';\n\n/// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n/// Get all profiles \nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  })\n\n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n/// Get profile by ID \nexport const getProfileById = userId => async dispatch => {\n\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n/// Get Github reps \nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      paylod: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n\n      dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div class='dash-buttons'>\n      <Link to='/edit-profile' class='btn btn-light'>\n        <i class='fas fa-user-circle text-primary'> </i> Edit Profile{' '}\n      </Link>{' '}\n      <Link to='/add-experience' class='btn btn-light'>\n        <i class='fab fa-black-tie text-primary'> </i> Add Experience{' '}\n      </Link>{' '}\n      <Link to='/add-education' class='btn btn-light'>\n        <i class='fas fa-graduation-cap text-primary'> </i> Add Education{' '}\n      </Link>{' '}\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map(exp => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{moment.utc(exp.from)}</Moment> -{' '}\n        {exp.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format='YYYY/MM/DD'>{moment.utc(exp.to)}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'>\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteExperience }\n)(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map(edu => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{moment.utc(edu.from)}</Moment> -{' '}\n        {edu.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format='YYYY/MM/DD'>{moment.utc(edu.to)}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'>\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteEducation }\n)(Education);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'> Dashboard </h1>{' '}\n      <p className='lead'>\n        <i className='fas f-user'> Welcome {user && user.name} </i>{' '}\n      </p>{' '}\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus'> </i>\n              Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p> Oops, looks like you haven't made a profile yet.</p>{' '}\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile{' '}\n          </Link>{' '}\n        </Fragment>\n      )}{' '}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getCurrentProfile,\n    deleteAccount\n  }\n)(Dashboard);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setformData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    skills,\n    status,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setformData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createProfile }\n)(withRouter(CreateProfile));\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, to, from, current, description } = formData;\n\n  const onChange = e =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  return (\n    <Fragment>\n      <section class='container'>\n        <h1 class='large text-primary'> Add An Experience </h1>{' '}\n        <p class='lead'>\n          <i class='fas fa-code-branch'> </i> Add any developer/programming\n          positions that you have had in the past{' '}\n        </p>{' '}\n        <small> * = required field </small>{' '}\n        <form\n          class='form'\n          onSubmit={e => {\n            e.preventDefault();\n            addExperience(formData, history);\n          }}>\n          <div class='form-group'>\n            <input\n              type='text'\n              placeholder='* Job Title'\n              name='title'\n              value={title}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>{' '}\n          <div class='form-group'>\n            <input\n              type='text'\n              placeholder='* Company'\n              name='company'\n              value={company}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>{' '}\n          <div class='form-group'>\n            <input\n              type='text'\n              placeholder='Location'\n              name='location'\n              value={location}\n              onChange={e => onChange(e)}\n            />{' '}\n          </div>{' '}\n          <div class='form-group'>\n            <h4> From Date </h4>{' '}\n            <input\n              type='date'\n              name='from'\n              value={from}\n              onChange={e => onChange(e)}\n            />{' '}\n          </div>{' '}\n          <div class='form-group'>\n            <p>\n              <input\n                type='checkbox'\n                name='current'\n                checked={current}\n                value={current}\n                onChange={() => {\n                  setFormData({\n                    ...formData,\n                    current: !current\n                  });\n                  toggleDisabled(!toDateDisabled);\n                }}\n              />{' '}\n              Current Job{' '}\n            </p>{' '}\n          </div>{' '}\n          <div class='form-group'>\n            <h4> To Date </h4>{' '}\n            <input\n              type='date'\n              name='to'\n              value={to}\n              onChange={e => onChange(e)}\n              disabled={toDateDisabled ? 'disabled' : ''}\n            />{' '}\n          </div>{' '}\n          <div class='form-group'>\n            <textarea\n              name='description'\n              cols='30'\n              rows='5'\n              placeholder='Job Description'\n              value={description}\n              onChange={e => onChange(e)}>\n              {' '}\n            </textarea>{' '}\n          </div>{' '}\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-light my-1' to='/dashboard'>\n            Go Back{' '}\n          </Link>{' '}\n        </form>{' '}\n      </section>{' '}\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  AddExperience: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    addExperience\n  }\n)(AddExperience);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\nimport { deleteEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addEducation }\n)(withRouter(AddEducation));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'>{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check' /> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport ProfileItem from './ProfileItems';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {' '}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'> Developers </h1>{' '}\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse and connect with\n            developers{' '}\n          </p>{' '}\n          <div className='profiles'>\n            {' '}\n            {profiles.length > 0 ? (\n              profiles.map(profile => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4> No profiles found... </h4>\n            )}{' '}\n          </div>{' '}\n        </Fragment>\n      )}{' '}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(\n  mapStateToProps,\n  {\n    getProfiles\n  }\n)(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x' />\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x' />\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x' />\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x' />\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x' />\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x' />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n        <p>{bio}</p>\n        <div className='line' />\n      </Fragment>\n    )}\n    <h2 className='text-primary'>Skill Set</h2>\n    <div className='skills'>\n      {skills.map((skill, index) => (\n        <div key={index} className='p-1'>\n          <i className='fas fa-check' /> {skill}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description }\n}) => (\n  <div>\n    <h3 className='text-dark'>{company}</h3>\n    <p>\n      <Moment format='YYYY/MM/DD'>{moment.utc(from)}</Moment> -{' '}\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{moment.utc(to)}</Moment>}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <p>\n      <strong>Location: </strong> {location}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired\n};\n\nexport default ProfileExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description }\n}) => (\n  <div>\n    <h3 className='text-dark'>{school}</h3>\n    <p>\n      <Moment format='YYYY/MM/DD'>{moment.utc(from)}</Moment> -{' '}\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{moment.utc(to)}</Moment>}\n    </p>\n    <p>\n      <strong>Degree: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field Of Study: </strong> {fieldofstudy}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map(repo => (\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'>\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGithubRepos }\n)(ProfileGithub);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map(experience => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map(education => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(Profile);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type='button'\n            className='btn btn-light'>\n            <i className='fas fa-thumbs-up' />{' '}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type='button'\n            className='btn btn-light'>\n            <i className='fas fa-thumbs-down' />\n          </button>\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'>\n              <i className='fas fa-times' />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { addLike, removeLike, deletePost }\n)(PostItem);\n","import axios from 'axios';\nimport {\n  setAlert\n} from './alert';\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3> Say Something... </h3>{' '}\n      </div>{' '}\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addPost({\n            text\n          });\n          setText('');\n        }}>\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>{' '}\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    addPost\n  }\n)(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'> Posts </h1>{' '}\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome to the community{' '}\n      </p>{' '}\n      <PostForm />\n      <div className='posts'>\n        {' '}\n        {posts.map(post => (\n          <PostItem key={post._id} post={post} />\n        ))}{' '}\n      </div>{' '}\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPosts\n  }\n)(Posts);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3> Leave a Comment </h3>{' '}\n      </div>{' '}\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addComment(postId, {\n            text\n          });\n          setText('');\n        }}>\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>{' '}\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    addComment\n  }\n)(CommentForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'>\n          <i className='fas fa-times' />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { deleteComment }\n)(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back To Posts{' '}\n      </Link>{' '}\n      <PostItem post={post} showActions={false} />{' '}\n      <CommentForm postId={post._id} />{' '}\n      <div className='comments'>\n        {' '}\n        {post.comments.map(comment => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}{' '}\n      </div>{' '}\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPost\n  }\n)(Post);\n","import {\n  SET_ALERT,\n  REMOVE_ALERT\n} from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n          loading: false,\n          user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n          loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n          isAuthenticated: false,\n          loading: false\n      };\n    default:\n      return state;\n  }\n}","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n          loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n          loading: false,\n      }\n      case PROFILE_ERROR:\n        return {\n          ...state,\n          error: payload,\n            loading: false\n        };\n      case CLEAR_PROFILE:\n        return {\n          ...state,\n          profile: null,\n            reps: [],\n            loading: false\n        };\n      case GET_REPOS:\n        return {\n          ...state,\n          repos: payload,\n            loading: false\n        }\n        default:\n          return state;\n  }\n}","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          )\n        },\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  combineReducers\n} from \"redux\";\nimport alert from './alert'\nimport auth from './auth'\nimport profile from './profile'\nimport post from './posts'\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post\n});","import {\n  createStore,\n  applyMiddleware\n} from 'redux';\n\nimport {\n  composeWithDevTools\n} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Edit Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Add some changes to your profile\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProfile, getCurrentProfile }\n)(withRouter(EditProfile));\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport AddExperience from './components/profile-form/AddExperience';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport AddEducation from './components/profile-form/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport NotFound from './components/layout/NotFound';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport EditProfile from './components/profile-form/EditProfile';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />{' '}\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />{' '}\n              <Route exact path='/login' component={Login} />{' '}\n              <Route exact path='/profiles' component={Profiles} />{' '}\n              <Route exact path='/profile/:id' component={Profile} />{' '}\n              <PrivateRoute\n                Route\n                exact\n                path='/dashboard'\n                component={Dashboard}\n              />{' '}\n              <PrivateRoute\n                Route\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />{' '}\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />{' '}\n              <PrivateRoute\n                exact\n                path='/add-experience'\n                component={AddExperience}\n              />{' '}\n              <PrivateRoute\n                exact\n                path='/add-education'\n                component={AddEducation}\n              />{' '}\n              <PrivateRoute exact path='/posts' component={Posts} />{' '}\n              <PrivateRoute exact path='/posts/:id' component={Post} />{' '}\n              {/* <Route component={NotFound} /> */}{' '}\n            </Switch>{' '}\n          </section>{' '}\n        </Fragment>{' '}\n      </Router>{' '}\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}